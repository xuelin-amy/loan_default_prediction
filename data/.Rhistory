library(data.table)
library(dplyr)
library(summarytools)
library(ggplot2)
library(ggpubr)
setwd("~/Dropbox/python_intro/dbs-data_analyst/data")
df <- fread('./train.csv')
head(df)
clean_data <- function(df){
df %>%
mutate(
request_date = as.Date(request_date, format = '%d-%B-%y'),
loan_amount = as.numeric(gsub('[$,]','', loan_amount)),
insured_amount = as.numeric(gsub('[$,]','', insured_amount)))
}
df <- clean_data(df)
head(df)
dfSummary(df %>% select(-id), valid.col = F, graph.col = F) %>% print()
options(repr.plot.width =2.5, repr.plot.height=1.5, repa.plot.res=300)
nb.theme <- theme(
text = element_text(size = 3),
element_line(size = 0.1),
legend.key.size = unit(0.2,'cm'),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent"), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent", color = NA), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent", color = NA)) # get rid of legend panel
df %>%
ggplot(aes(x= term, fill= factor(default_status))) +
geom_histogram(bins=50) +
facet_grid(~default_status) +
labs(title='Term Distribution') +
nb.theme
p1 <- df %>%
ggplot(aes(x=loan_amount)) +
geom_histogram(bins = 50, fill='lightblue') +
labs(title = 'Loan Amount') +
nb.theme
p2 <- df %>%
ggplot(aes(x=insured_amount)) +
geom_histogram(bins = 50, fill='lightblue') +
labs(title = 'Insured Amount') +
nb.theme
p3 <- p1 + scale_x_log10() + labs(title = 'Loan Amount (log scale)')
p4 <- p2 + scale_x_log10() + labs(title = 'Insured Amount (log scale)')
ggarrange(p1,p2,p3,p4, ncol = 2, nrow = 2)
df %>%
ggplot(aes(x=loan_amount,y= insured_amount)) +
geom_point(color='lightblue') +
labs(title = 'Insured Amount vs. Loan Amount') +
nb.theme
df %>% ggplot(aes(x=loan_amount,y=insured_amount,
color=as.factor(default_status))) +
geom_point(stat = 'identity')
df %>%
mutate(ym = format(request_date, '%Y-%m')) %>%
group_by(ym) %>%
summarise(default_rate = mean(default_status)) %>%
ggplot(aes(x=ym, y=default_rate)) +
geom_bar(stat = 'identity', fill='lightblue') +
scale_y_continuous(labels = scales::percent) +
labs(title = 'Default Rate over Time', x='Requested Date',y='Default Rate') +
nb.theme
df %>%
group_by(industry) %>%
summarise(default_rate= mean(default_status)) %>%
ggplot(aes(x=industry, y=default_rate)) +
geom_bar(stat = 'identity', fill='lightblue') +
scale_y_continuous(labels = scales::percent) +
labs(title = 'Default Rate across Industry', x='Industry', y='Default Rate') +
coord_flip() +
nb.theme
df %>% group_by(industry) %>%
summarise(default_rate=mean(default_status)) %>%
ggplot(aes(x=reorder(industry, default_rate), y=default_rate)) +
geom_bar(stat = 'identity') +
geom_line(group=1) +
scale_y_continuous(labels = scales::percent) +
coord_flip()
p1 <- df %>%
group_by(business_new) %>%
summarise(default_rate = mean(default_status)) %>%
ggplot(aes(x=business_new, y=default_rate)) +
geom_bar(stat = 'identity', fill='lightblue') +
scale_y_continuous(labels=scales::percent) +
labs(title = 'New Business Type', x='New Business',y='Default Rate') +
coord_flip() +
nb.theme
p2 <- df %>%
group_by(business_type) %>%
summarise(default_rate = mean(default_status)) %>%
ggplot(aes(x = business_type, y = default_rate)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
scale_y_continuous(labels = scales::percent) +
labs(title = 'Business Type Effect', x = 'Business Type', y = 'Default Rate') +
coord_flip() +
nb.theme
ggarrange(p1,p2, ncol = 2)
df %>%
ggplot(aes(x=log10(loan_amount), fill= factor(default_status))) +
geom_density(alpha=0.5) +
labs(title = 'Loan Amount effect on default') +
nb.theme
